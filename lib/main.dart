// Code Generated by Sidekick is for learning and experimentation purposes only.
import 'package:flutter/material.dart';

void main() => runApp(MyApp());

class MyApp extends StatelessWidget {
  // Code Generated by Sidekick is for learning and experimentation purposes only.
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      home: TrackerHome(),
    );
  }
}

class TrackerHome extends StatefulWidget {
  // Code Generated by Sidekick is for learning and experimentation purposes only.
  @override
  _TrackerHomeState createState() => _TrackerHomeState();
}

class _TrackerHomeState extends State<TrackerHome> {
  // Code Generated by Sidekick is for learning and experimentation purposes only.
  int selectedBottomIndex = 0;

  void onTopBarTap(String which) {
    //ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text('$which tapped')));
  }

  void onCenterBoxTap(int index) {
    //ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text('Box $index tapped')));
  }

  void onBottomNavTap(int index) {
    setState(() {
      selectedBottomIndex = index;
    });
    //ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text('Bottom Nav $index tapped')));
  }

  @override
  Widget build(BuildContext context) {
    // Center boxes data
    final List<Map<String, dynamic>> centerBoxes = [
      {'icon': Icons.account_balance_wallet, 'text': 'Expenses'},
      {'icon': Icons.fitness_center_sharp, 'text': 'Exercise'},
      {'icon': Icons.checklist_rtl, 'text': 'To-Do List'},
      {'icon': Icons.interests_rounded, 'text': 'Hoibbies'},
      {'icon': Icons.add_box, 'text': 'Custom'},
      // {'icon': Icons.access_alarm, 'text': 'Box 1'},
      // {'icon': Icons.account_balance, 'text': 'Box 2'},
      // {'icon': Icons.ad_units, 'text': 'Box 3'},
      // {'icon': Icons.airplanemode_active, 'text': 'Box 4'},
      // {'icon': Icons.anchor, 'text': 'Box 5'},
    ];

    // Bottom nav data
    final List<Map<String, dynamic>> bottomNav = [
      {'icon': Icons.account_balance_wallet, 'text': 'Expenses'},
      {'icon': Icons.fitness_center_sharp, 'text': 'Exercise'},
      {'icon': Icons.add_box, 'text': 'Custom'},
      {'icon': Icons.checklist_rtl, 'text': 'To-Do List'},
      {'icon': Icons.interests_rounded, 'text': 'Hoibbies'},
    ];

    return Scaffold(
      backgroundColor: Colors.grey[100],
      body: SafeArea(
        child: Column(
          children: [
            // Custom Top Bar
            Padding(
              padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 12),
              child: Row(
                children: [
                  // Hamburger
                  GestureDetector(
                    onTap: () => onTopBarTap('Hamburger'),
                    child: Icon(Icons.menu, size: 28),
                  ),
                  // Centered "Tracker"
                  Expanded(
                    child: Center(
                      child: GestureDetector(
                        onTap: () => onTopBarTap('Tracker'),
                        child: Text(
                         'Tracker',
                        style: TextStyle(
                           fontSize: 22,
                           fontWeight: FontWeight.bold,
                           letterSpacing: 1.2,
                         ),
                       ),
                      ),
                    ),
                  ),
                  // Person icon in black rounded rectangle
                  GestureDetector(
                    onTap: () => onTopBarTap('Profile'),
                    child: Container(
                      decoration: BoxDecoration(
                        color: Colors.black,
                        borderRadius: BorderRadius.circular(12),
                      ),
                      padding: EdgeInsets.all(6),
                      child: Icon(Icons.person, color: Colors.white, size: 24),
                    ),
                  ),
                ],
              ),
            ),
            SizedBox(height: 16),
            // Center 5 boxes (2 per row, last centered)
            Expanded(
              child: Column(
                mainAxisAlignment: MainAxisAlignment.center,
                children: [
                  // First row
                  Row(
                    mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                    children: [
                      _buildCenterBox(centerBoxes[0], 0),
                      _buildCenterBox(centerBoxes[1], 1),
                    ],
                  ),
                  SizedBox(height: 20),
                  // Second row
                  Row(
                    mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                    children: [
                      _buildCenterBox(centerBoxes[2], 2),
                      _buildCenterBox(centerBoxes[3], 3),
                    ],
                  ),
                  SizedBox(height: 20),
                  // Last box centered
                  Row(
                    mainAxisAlignment: MainAxisAlignment.center,
                    children: [
                      _buildCenterBox(centerBoxes[4], 4),
                    ],
                  ),
                ],
              ),
            ),
            // Bottom Navigation Bar
            Container(
              decoration: BoxDecoration(
                color: Colors.white,
                boxShadow: [
                  BoxShadow(
                    color: Colors.black12, blurRadius: 6, offset: Offset(0, -2),
                  ),
                ],
              ),
              child: Row(
                mainAxisAlignment: MainAxisAlignment.spaceAround,
                children: List.generate(bottomNav.length, (index) {
                  final isSelected = selectedBottomIndex == index;
                  return Expanded(
                    child: GestureDetector(
                      onTap: () => onBottomNavTap(index),
                      child: Padding(
                        padding: const EdgeInsets.symmetric(vertical: 10),
                        child: Column(
                          mainAxisSize: MainAxisSize.min,
                          children: [
                            Icon(
                              bottomNav[index]['icon'],
                              color: isSelected ? Colors.blueAccent : Colors.grey,
                            ),
                            SizedBox(height: 4),
                            Text(
                              bottomNav[index]['text'],
                              style: TextStyle(
                                color: isSelected ? Colors.blueAccent : Colors.grey,
                                fontWeight: isSelected ? FontWeight.bold : FontWeight.normal,
                                fontSize: 12,
                              ),
                            ),
                          ],
                        ),
                      ),
                    ),
                  );
                }),
              ),
            ),
          ],
        ),
      ),
    );
  }

  Widget _buildCenterBox(Map<String, dynamic> data, int index) {
    // Code Generated by Sidekick is for learning and experimentation purposes only.
    return GestureDetector(
      onTap: () => onCenterBoxTap(index + 1),
      child: Container(
        width: 180,
        height: 120,
        margin: EdgeInsets.symmetric(horizontal: 8),
        decoration: BoxDecoration(
          color: Colors.white,
          borderRadius: BorderRadius.circular(16),
          boxShadow: [
            BoxShadow(
              color: Colors.black12, blurRadius: 8, offset: Offset(0, 4),
            ),
          ],
        ),
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            Icon(data['icon'], size: 32, color: Colors.blueAccent),
            SizedBox(height: 8),
            Text(
              data['text'],
              style: TextStyle(fontSize: 15, fontWeight: FontWeight.w500),
            ),
          ],
        ),
      ),
    );
  }
}
